name: CI - Build and Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ssd-diagnostic-suite/package-lock.json
      
      - name: Install Node dependencies
        run: |
          cd ssd-diagnostic-suite
          npm ci
      
      - name: TypeScript check
        run: |
          cd ssd-diagnostic-suite
          npm run typecheck || true
      
      - name: Build frontend
        run: |
          cd ssd-diagnostic-suite
          npm run build
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: ssd-diagnostic-suite/backend/requirements.txt
      
      - name: Install Python dependencies
        run: |
          cd ssd-diagnostic-suite/backend
          pip install -r requirements.txt
      
      - name: Python syntax check
        run: |
          cd ssd-diagnostic-suite/backend
          python3 -m py_compile *.py || true
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Create .env file
        run: |
          cp .env.example .env
      
      - name: Build Docker images
        run: |
          docker compose build --no-cache
      
      - name: Test Docker containers
        run: |
          docker compose up -d
          sleep 15
          docker ps
          curl -f http://localhost:8000/health || echo "Health check failed"
          docker compose logs backend
          docker compose down

