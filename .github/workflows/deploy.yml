name: Deploy SSD Diagnostic Suite

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ssd-diagnostic-suite/package-lock.json
      
      - name: Install Node dependencies
        run: |
          cd ssd-diagnostic-suite
          npm ci
      
      - name: Build frontend
        run: |
          cd ssd-diagnostic-suite
          npm run build
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub (optional)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        continue-on-error: true
      
      - name: Create .env file
        run: |
          cp .env.example .env
      
      - name: Prepare deployment files
        run: |
          rm -rf dist
          mkdir -p dist
          if [ -d "ssd-diagnostic-suite/dist" ]; then
            cp -r ssd-diagnostic-suite/dist/. dist/
          else
            echo "Build output not found at ssd-diagnostic-suite/dist" >&2
            exit 1
          fi
      
      - name: Build Docker images
        run: |
          docker compose build --no-cache
      
      - name: Test Docker images
        run: |
          docker compose up -d
          sleep 10
          docker ps
          curl -f http://localhost:8000/health || exit 1
          docker compose down
      
      - name: Deploy to server (SSH)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_PORT || 22 }}
          script: |
            cd ${{ secrets.DEPLOY_PATH || '/opt/ssd-diagnostic-suite' }}
            git pull origin main
            ./deploy.sh

